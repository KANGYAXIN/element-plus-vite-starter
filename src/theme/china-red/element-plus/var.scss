/* Element Chalk Variables */
@use 'sass:math';
@use 'sass:map';
@use '../../mixins/function.scss' as *;

// types
$types: primary, success, warning, danger, error, info;

// change color
$colors: () !default;
$colors: map.deep-merge(
  (
    'white': #ffffff,
    'black': #000000,
    'primary': (
      'base': #327DE8,
      'light-3': #5B97ED,
      'light-5': #C1D8F8,
      'light-9': #F8F8F9,
      // 'dark-2': #2864B9
    ),
    'success': (
      'base': #00B35A,
      'light-3': #33C27B,
      'light-5': #CCF0DE,
      'light-9': #F8F8F9,
      // 'dark-2': #008F48
    ),
    'warning': (
      'base': #ED6A0C,
      'light-3': #F1883D,
      'light-5': #FBE1CE,
      'light-9': #F8F8F9,
      // 'dark-2': #BD5409
    ),
    'danger': (
      'base': #D40000,
      'light-3': #DD3333,
      'light-5': #F6CCCC,
      'light-9': #F8F8F9,
      // 'dark-2': #A90000
    ),
    'error': (
      'base': #D40000,
      'light-3': #DD3333,
      'light-5': #F6CCCC,
      'light-9': #F8F8F9,
      // 'dark-2': #A90000
    ),
    'info': (
      'base': #909399
    )
  ),
  $colors
);

$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-error: map.get($colors, 'error', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

//$colors添加 --el-color-primary-light-7
@mixin set-color-mix-level($type, $number, $mode: 'light', $mix-color: $color-white) {
  $colors: map.deep-merge(
    (
      $type: (
        '#{$mode}-#{$number}': mix($mix-color, map.get($colors, $type, 'base'), math.percentage(math.div($number, 10)))
      )
    ),
    $colors
  ) !global;
}

// $colors.primary.light-i
@each $type in $types {
  @for $i from 1 through 9 {
    @include set-color-mix-level($type, $i, 'light', $color-white);
  }
}

@each $type in $types {
  @include set-color-mix-level($type, 2, 'dark', $color-white);
}

